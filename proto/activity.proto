syntax = "proto3";

package activity;

option go_package="./services";

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}


service activity {
    rpc CreateActivity(ActivityForm) returns (Response);
    rpc GetActivitys(Empty) returns (ActivityList);
    rpc GetActivity(ActivityId) returns (Activity);
    rpc EditActivity(ActivityEdit) returns (Response);
    rpc DeleteActivity(ActivityId) returns (Response);
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
    rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}

message Empty {}

message ActivityId {
  string id = 1;
}

message ActivityForm {
  string Name = 1;
  string Description = 2;
  repeated string ActivityType = 3;
  string ImageProfile = 4;
  string OwnerId = 5;
  string Location = 6;
  int64 MaxParticipant = 7;
  string Date = 8;
  float Duration = 9;
}

message Activity {
  string ActivityId = 1;
  string Name = 2;
  string Description = 3;
  repeated string ActivityType = 4;
  string ImageProfile = 5;
  string OwnerId = 6;
  string Location = 7;
  int64 MaxParticipant = 8;
  string Participant = 9;
  string Date = 10;
  float Duration = 11;
  string ChatId = 12;
}

message ActivityEdit {
  string ActivityId = 1;
  string Name = 2;
  string Description = 3;
  repeated string ActivityType = 4;
  string ImageProfile = 5;
  string OwnerId = 6;
  string Location = 7;
  int64 MaxParticipant = 8;
  string Date = 9;
  float Duration = 10;
  string ChatId = 11;
}

message ActivityList{
  repeated Activity data = 1;
}

message Response {
  int64 Status = 1;
  string Message = 2;
}